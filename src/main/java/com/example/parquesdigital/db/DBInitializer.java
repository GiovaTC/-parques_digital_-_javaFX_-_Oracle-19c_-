package com.example.parquesdigital.db;

import java.sql.Connection;
import java.sql.Statement;

public class DBInitializer {

    public static void initSchema() {
        String[] sqlStatements = {
                // Borrar tablas
                "DROP TABLE MOVES CASCADE CONSTRAINTS",
                "DROP TABLE PLAYERS CASCADE CONSTRAINTS",
                "DROP TABLE GAME_SESSIONS CASCADE CONSTRAINTS",

                // Borrar secuencias
                "DROP SEQUENCE SEQ_PLAYERS",
                "DROP SEQUENCE SEQ_GAME_SESSIONS",

                // Crear secuencias
                "CREATE SEQUENCE SEQ_PLAYERS START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE",
                "CREATE SEQUENCE SEQ_GAME_SESSIONS START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE",

                // Crear tabla de sesiones
                "CREATE TABLE GAME_SESSIONS (" +
                        "SESSION_ID NUMBER PRIMARY KEY, " +
                        "START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP, " +
                        "END_TIME TIMESTAMP)",

                // Crear tabla de jugadores
                "CREATE TABLE PLAYERS (" +
                        "PLAYER_ID NUMBER PRIMARY KEY, " +
                        "USERNAME VARCHAR2(50) UNIQUE NOT NULL)",

                // Crear tabla de movimientos
                "CREATE TABLE MOVES (" +
                        "MOVE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                        "SESSION_ID NUMBER NOT NULL, " +
                        "PLAYER_ID NUMBER NOT NULL, " +
                        "MOVE_NUMBER NUMBER NOT NULL, " +
                        "FROM_POS NUMBER, " +
                        "TO_POS NUMBER, " +
                        "DICE_VALUE NUMBER, " +
                        "MOVE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP, " +
                        "CONSTRAINT FK_MOVES_SESSION FOREIGN KEY (SESSION_ID) REFERENCES GAME_SESSIONS(SESSION_ID), " +
                        "CONSTRAINT FK_MOVES_PLAYER FOREIGN KEY (PLAYER_ID) REFERENCES PLAYERS(PLAYER_ID))"
        };

        try (Connection conn = DBManager.getConnection();
             Statement stmt = conn.createStatement()) {

            for (String sql : sqlStatements) {
                try {
                    stmt.execute(sql);
                    System.out.println("Ejecutado: " + sql);
                } catch (Exception e) {
                    System.out.println("Aviso (posible inexistente): " + sql);
                }
            }

            System.out.println("Esquema inicializado correctamente âœ…");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
